{"version":3,"sources":["App.js","index.js"],"names":["App","useState","usernameReg","setUsernameReg","passwordReg","setPasswordReg","username","setUsername","password","setPassword","loginStatus","setLoginStatus","usernameTextIDs","setUsernameTextIDs","React","anchorEl","setAnchorEl","open","Boolean","passwordTextIDs","setPasswordTextIDs","handleMenu","event","currentTarget","handleClose","Axios","defaults","withCredentials","useEffect","get","then","response","data","loggedIn","user","Username","className","AppBar","position","Toolbar","style","justifyContent","display","Hidden","xsDown","ButtonGroup","color","variant","aria-label","Button","IconButton","aria-controls","aria-haspopup","onClick","Menu","id","anchorOrigin","vertical","horizontal","onClose","MenuItem","smUp","Grid","container","direction","alignItems","spacing","item","xs","Card","maxWidth","minWidth","margin","TextField","label","onChange","e","target","value","type","post","console","log","message","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.316afc0b.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\"; \nimport './App.css';\nimport Axios from \"axios\";\nimport 'fontsource-roboto';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { Grid, ButtonGroup, Card, Hidden } from \"@material-ui/core\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\n\n\n\n\n\nfunction App() {\n \n  const [usernameReg, setUsernameReg] = useState('');\n  const [passwordReg, setPasswordReg] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginStatus, setLoginStatus] = useState('');\n  const [usernameTextIDs, setUsernameTextIDs] = useState('');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const [passwordTextIDs, setPasswordTextIDs] = useState('');\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  \n\n\n\n  Axios.defaults.withCredentials = true;\n\n  const register = () => {\n    Axios.post(\"http://localhost:3001/register\", {\n      username: usernameReg,\n      password: passwordReg,\n    }).then((response) => {\n      console.log(response.data);\n    });\n  };\n\n  const login = () => {\n    Axios.post(\"http://localhost:3001/login\", {\n      username: username,\n      password: password,\n    }).then((response) => {\n      if (response.data.message){\n        setLoginStatus(response.data.message);\n        setUsernameTextIDs(\"standard-error-helper-text\");\n        setPasswordTextIDs(\"standard-error-helper-text\");\n      } else {\n        setLoginStatus(response.data[0].Username);\n        setUsernameTextIDs(\"standard-basic\");\n        setPasswordTextIDs(\"standard-password-input\");\n      }\n  });\n  };\n\n  useEffect(() =>{\n    Axios.get(\"http://localhost:3001/login\").then((response) => {\n      if(response.data.loggedIn === true){\n      setLoginStatus(response.data.user[0].Username);\n      }\n  })\n  });\n\n\n\n\n  return (\n\n    <div className=\"App\">\n\n     <AppBar position=\"static\">\n        <Toolbar \n        style={{\n          justifyContent: 'center',\n          display: \"inline-flex\",\n        }}\n        >\n          <Hidden xsDown>\n      \n          <ButtonGroup \n          color=\"inherit\"\n           variant=\"text\" \n           aria-label=\"text primary button group\">\n          <Button>Home</Button>\n          <Button>Cadets</Button>\n          <Button>Stock Management</Button>\n          <Button>Staff Accounts</Button>\n          </ButtonGroup>\n         \n          <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'center',\n                }}\n                \n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>My Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Logout</MenuItem>\n              </Menu>\n              </Hidden>\n\n             <Hidden smUp>\n              <IconButton\n                aria-label=\"more\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />Menu\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'center',\n                }}\n                \n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Home</MenuItem>\n                <MenuItem onClick={handleClose}>Cadets</MenuItem>\n                <MenuItem onClick={handleClose}>Stock Management</MenuItem>\n                <MenuItem onClick={handleClose}>Staff Accounts</MenuItem>\n              </Menu>\n              </Hidden>\n              \n             \n          \n          \n        </Toolbar>\n      </AppBar>\n\n      <Grid container\n        direction=\"column\"\n        alignItems=\"center\"\n        spacing={1} \n      >\n\n<Grid item xs={4}>\n        <Card\n        style={\n          {\n           justifyContent: 'center',\n           display: 'inline-flex',\n           maxWidth: '300px',\n           minWidth: '190px',\n           margin: 10,\n          }\n        } \n        >\n\n      <div \n      className=\"registration\"\n      style={\n        {\n\n         margin: 10 ,\n        }\n      \n      }\n      >\n        <h1>Registration</h1>\n        <TextField id={usernameTextIDs} label=\"Username\" \n        onChange={(e) =>{\n          setUsernameReg(e.target.value);\n        }}\n         />\n       <TextField\n          id={passwordTextIDs}\n          label=\"Password\"\n          type=\"password\" \n        onChange={(e) => {\n          setPasswordReg(e.target.value)\n        }}\n        />\n      \n        <Button \n        variant=\"contained\" \n        color=\"primary\" \n        style={\n          {\n           justifyContent: 'center',\n           display: \"inline-flex\",\n           margin: 12,}\n        \n        }\n        onClick = {register}>Register</Button>\n        </div>\n        </Card>\n        </Grid>\n\n        <Grid item xs={4}>\n        <Card\n        style={\n          {\n           justifyContent: 'center',\n           display: 'inline-flex',\n           maxWidth: '300px',\n           minWidth: '190px',\n           margin: 10,\n          }\n        } \n        >\n\n        <div \n        className=\"login\" \n        style={\n          {\n           justifyContent: 'center',\n           display: 'inline-block',\n           margin: 12,}\n        \n        }>\n          <h1>Login</h1>\n          <TextField id={usernameTextIDs} label=\"Username\" \n          onChange={(e) =>{\n          setUsername(e.target.value);\n        }}/>\n        \n        <TextField\n          id={passwordTextIDs}\n          label=\"Password\"\n          type=\"password\"\n          onChange={(e) => {\n            setPassword(e.target.value)\n          }}/>\n        \n          <Button \n          variant=\"contained\" \n          color=\"primary\" \n          style={\n            {\n\n             justifyContent: 'center',\n             display: \"inline-flex\",\n             margin: 12,}\n          \n          }\n          onClick={login}>Login</Button>\n      </div>\n      </Card>\n      </Grid>\n      </Grid>\n\n\n        <h1\n        style={\n          {color: 'white',}\n        }\n        >\n          {loginStatus}\n          </h1>\n       \n     </div>\n     //</div>\n  );\n        }\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App/>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}